name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      version_increment:
        description: 'Version increment type (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test

    - name: Package extension
      run: npx @vscode/vsce package

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: plainenglish-lang-extension
        path: "*.vsix"

  version-and-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [build]
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'

    - name: Install dependencies
      run: npm ci

    - name: Get current version
      id: package_version
      run: echo "::set-output name=current_version::$(node -p "require('./package.json').version")"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package_version.outputs.current_version }}
        release_name: Release ${{ steps.package_version.outputs.current_version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./plainenglish-lang-${{ steps.package_version.outputs.current_version }}.vsix
        asset_name: plainenglish-lang-${{ steps.package_version.outputs.current_version }}.vsix
        asset_content_type: application/octet-stream

    - name: Update version-info.json
      run: |
        jq --arg version "${{ steps.package_version.outputs.current_version }}" --arg url "https://github.com/${{ github.repository }}/releases/download/v${{ steps.package_version.outputs.current_version }}/plainenglish-lang-${{ steps.package_version.outputs.current_version }}.vsix" '.version = $version | .downloadUrl = $url' version-info.json > temp.json && mv temp.json version-info.json

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version-info.json
        git commit -m "Update version-info.json for version ${{ steps.package_version.outputs.current_version }}"
        git push